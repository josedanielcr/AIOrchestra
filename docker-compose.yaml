version: '3'
services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:7.6.1
    hostname: zookeeper-1
    container_name: zookeeper-1
    volumes:
      - ./kafka/zookeeper-1_data:/var/lib/zookeeper/data
      - ./kafka/zookeeper-1_log:/var/lib/zookeeper/log
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper-1:2888:3888;2181 server.2=zookeeper-2:2888:3888;2181 server.3=zookeeper-3:2888:3888;2181
    networks:
      - ai-orchestra-network

  zookeeper-2:
    image: confluentinc/cp-zookeeper:7.6.1
    hostname: zookeeper-2
    container_name: zookeeper-2
    volumes:
      - ./kafka/zookeeper-2_data:/var/lib/zookeeper/data
      - ./kafka/zookeeper-2_log:/var/lib/zookeeper/log
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zookeeper-1:2888:3888;2181 server.2=zookeeper-2:2888:3888;2181 server.3=zookeeper-3:2888:3888;2181
    networks:
      - ai-orchestra-network

  zookeeper-3:
    image: confluentinc/cp-zookeeper:7.6.1
    hostname: zookeeper-3
    container_name: zookeeper-3
    volumes:
      - ./kafka/zookeeper-3_data:/var/lib/zookeeper/data
      - ./kafka/zookeeper-3_log:/var/lib/zookeeper/log
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zookeeper-1:2888:3888;2181 server.2=zookeeper-2:2888:3888;2181 server.3=zookeeper-3:2888:3888;2181
    networks:
      - ai-orchestra-network

  broker-1:
    image: confluentinc/cp-kafka:7.6.1
    hostname: broker-1
    container_name: broker-1
    volumes:
      - ./kafka/broker-1-data:/var/lib/kafka/data
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-1:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_SNAPSHOT_TRUST_EMPTY: true
    networks:
      - ai-orchestra-network

  broker-2:
    image: confluentinc/cp-kafka:7.6.1
    hostname: broker-2
    container_name: broker-2
    volumes:
      - ./kafka/broker-2-data:/var/lib/kafka/data
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
      - broker-1
    ports:
      - 9093:9093
      - 29093:29093
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-2:29093,EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_SNAPSHOT_TRUST_EMPTY: true
    networks:
      - ai-orchestra-network

  broker-3:
    image: confluentinc/cp-kafka:7.6.1
    hostname: broker-3
    container_name: broker-3
    volumes:
      - ./kafka/broker-3-data:/var/lib/kafka/data
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
      - broker-1
      - broker-2
    ports:
      - 9094:9094
      - 29094:29094
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-3:29094,EXTERNAL://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_SNAPSHOT_TRUST_EMPTY: true
    networks:
      - ai-orchestra-network

  mongodb-user-management:
    image: mongodb/mongodb-community-server:7.0.4-ubi8
    container_name: aiorchestra-mongodb-user-management
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: AIOrchestra123
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - ai-orchestra-network

  mongodb-playlist-management:
    image: mongodb/mongodb-community-server:7.0.4-ubi8
    container_name: aiorchestra-mongodb-playlist-management
    ports:
      - "27018:27018"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: AIOrchestra123
    volumes:
      - mongodb_playlist_data:/data/db
      - ./mongo-init-playlists.js:/docker-entrypoint-initdb.d/mongo-init-playlists.js:ro
      - ./mongod.conf:/etc/mongod.conf:ro
    command: ["mongod", "--config", "/etc/mongod.conf"]
    networks:
      - ai-orchestra-network 

  redis:
    image: redis:7.2.5
    container_name: aiorchestra-redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--requirepass", "AIOrchestra123"]
    networks:
      - ai-orchestra-network 

  api-gateway:
    build:
      context: ./ApiGateway
    image: ai-orchestra/api-gateway:latest
    container_name: api-gateway
    ports:
      - "8082:8082"
      - "8083:8083"
    volumes:
      - ./certificates/aspnetapp.pfx:/app/certificates/aspnetapp.pfx
    environment:
      ASPNETCORE_HTTPS_PORT: "https://+:8083"
      ASPNETCORE_URLS: "https://+:8083;http://+:8082"
      KAFKA_BROKERS: "broker-1:29092,broker-2:29093,broker-3:29094"
      ASPNETCORE_Kestrel__Certificates__Default__Path: "/app/certificates/aspnetapp.pfx"
      ASPNETCORE_Kestrel__Certificates__Default__Password: "AIOrchestra123"
      RUNNING_IN_DOCKER: "true"
    networks:
      - ai-orchestra-network

  user-management:
    build:
      context: ./UserManagementService
    image: ai-orchestra/user-management:latest
    container_name: user-management
    ports:
      - "8086:8086"
      - "8087:8087"
    volumes:
      - ./certificates/aspnetapp.pfx:/app/certificates/aspnetapp.pfx
    environment:
      ASPNETCORE_HTTPS_PORT: "https://+:8087"
      ASPNETCORE_URLS: "https://+:8087;http://+:8086"
      KAFKA_BROKERS: "broker-1:29092,broker-2:29093,broker-3:29094"
      ASPNETCORE_Kestrel__Certificates__Default__Path: "/app/certificates/aspnetapp.pfx"
      ASPNETCORE_Kestrel__Certificates__Default__Password: "AIOrchestra123"
      RUNNING_IN_DOCKER: "true"
    networks:
      - ai-orchestra-network

  music-recommender:
    build:
      context: ./MusicRecommenderService
    image: ai-orchestra/music-recommender:latest
    container_name: music-recommender
    ports:
      - "8088:8088"
      - "8089:8089"
    volumes:
      - ./MusicRecommenderService/certificates:/app/certificates
    environment:
      KAFKA_BROKERS: "broker-1:29092,broker-2:29093,broker-3:29094"
      RUNNING_IN_DOCKER: "true"
    networks:
      - ai-orchestra-network

  playlist:
    build:
      context: ./PlaylistService
    image: ai-orchestra/playlist:latest
    container_name: playlist
    ports:
      - "8090:8090"
      - "8091:8091"
    volumes:
      - ./certificates/aspnetapp.pfx:/app/certificates/aspnetapp.pfx
    environment:
      ASPNETCORE_HTTPS_PORT: "https://+:8091"
      ASPNETCORE_URLS: "https://+:8091;http://+:8090"
      KAFKA_BROKERS: "broker-1:29092,broker-2:29093,broker-3:29094"
      ASPNETCORE_Kestrel__Certificates__Default__Path: "/app/certificates/aspnetapp.pfx"
      ASPNETCORE_Kestrel__Certificates__Default__Password: "AIOrchestra123"
      RUNNING_IN_DOCKER: "true"
    networks:
      - ai-orchestra-network

volumes:
  mongodb_data:
  mongodb_playlist_data:

networks:
  ai-orchestra-network:
    driver: bridge